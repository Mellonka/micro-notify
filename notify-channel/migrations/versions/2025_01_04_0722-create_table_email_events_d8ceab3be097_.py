"""create table email_events

Revision ID: d8ceab3be097
Revises: 7d9ab2d53b40
Create Date: 2025-01-04 07:22:36.602167

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "d8ceab3be097"
down_revision: Union[str, None] = "7d9ab2d53b40"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "email_events",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("email_id", sa.Uuid(), nullable=True),
        sa.Column("timestamp", sa.DateTime(timezone=True), nullable=False),
        sa.Column("event", sa.String(), nullable=False),
        sa.Column("event_data", postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.ForeignKeyConstraint(
            ["email_id"],
            ["emails.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        "email_events_by_email_idx",
        "email_events",
        ["email_id", "id"],
        unique=False,
        postgresql_where=sa.text("email_id IS NOT NULL"),
    )
    op.create_index(
        "email_events_by_event_idx",
        "email_events",
        ["event", "timestamp", "id"],
        unique=False,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index("email_events_by_event_idx", table_name="email_events")
    op.drop_index(
        "email_events_by_email_idx",
        table_name="email_events",
        postgresql_where=sa.text("email_id IS NOT NULL"),
    )
    op.drop_table("email_events")
    # ### end Alembic commands ###
